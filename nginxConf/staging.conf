# Static Cache checks
set $cache false;

# Disallow direct access of cache directory
location /cache {
	internal;
}

# Only serve static cache if the cache file exists
if (-f $document_root/cache/1$request_uri/index.html) {
	set $cache true;
}

# Don't serve static cache if not GET request
if ($request_method != GET) {
	set $cache false;
}

# Everywhere
location ~ ^(.*)$ {
	## BASIC AUTH ##
	satisfy any;
	allow 75.138.250.192; # TJ's Home
	deny all;

	auth_basic "Staging Server"; # For Basic Auth
	auth_basic_user_file /home/forge/staging.buzzingpixel.com/current/authStaging/.htpasswd;
	## END BASIC AUTH ##

	# If static cache is enabled, do that!
	if ($cache = true) {
		rewrite ^(.*)$ /cache/1$request_uri/index.html break;
	}

	try_files $uri $uri/ /index.php?$query_string;

	# Remove index.php from URL
	rewrite ^(/index\.php)(.*) $2 permanent;

	# Remove trailing slashes
	rewrite ^/(.*)/$ /$1 permanent;

	# Set default caching
	expires 1d;
	access_log off;
	add_header Cache-Control "public";
}

# Turn off basic auth for Forge LetsEncrypt SSL
location /.well-known {
	auth_basic "off";
	allow all;
}

# Health basic auth off
location = /health {
	try_files $uri $uri/ /index.php?p=$uri&$args;
}

# Cache Feeds
location ~* \.(?:rss|atom)$ {
	expires 1h;
}

# Cache Media: images, icons, video, audio, HTC
location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
	expires 1M;
}

# Remove index.php from root URI
if ($request_uri ~* "^/index\.php$") {
	return 301 /;
}

# Remove index.php from root URI
if ($request_uri ~* "^/index\.php$") {
	return 301 /;
}

# Redirect old Construct field-type docs to the field-types docs
location = /ee-add-ons/construct/documentation/field-type {
	return 301 /ee-add-ons/construct/documentation/field-types;
}

# Redirect ee-add-ons to software
rewrite ^(/ee-add-ons)(.*)$ /software$2 permanent;

# Redirect old ansel docs
rewrite ^(/software/ansel/documentation)$ /software/ansel-ee/documentation permanent;
